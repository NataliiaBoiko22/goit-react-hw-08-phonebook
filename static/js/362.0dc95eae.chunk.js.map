{"version":3,"file":"static/js/362.0dc95eae.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/RegisterForm/registerForm.module.css?0fd0","components/RegisterForm/RegisterForm.jsx","webpack://react-homework-template/./src/pages/Register/registerPage.module.css?dbf7","pages/Register/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"registerTitle\":\"registerForm_registerTitle__xU7GG\",\"form\":\"registerForm_form__8tKcV\",\"password\":\"registerForm_password__ik-Ao\",\"buttonPasswordR\":\"registerForm_buttonPasswordR__qc7Lm\",\"buttonSignUp\":\"registerForm_buttonSignUp__YjCPO\",\"passwordText\":\"registerForm_passwordText__R2PFV\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport Form from 'react-bootstrap/Form';\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport { MdEmail } from 'react-icons/md';\nimport { RiLockPasswordFill } from 'react-icons/ri';\nimport { FaUser } from 'react-icons/fa';\nimport { GoEyeClosed, GoEye } from 'react-icons/go';\nimport { toast } from 'react-toastify';\nimport Button from 'react-bootstrap/Button';\nimport css from './registerForm.module.css';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [validated, setValidated] = useState(false);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [show, setShow] = useState(false);\n\n  const handleClick = () => setShow(!show);\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    if (name === '' || email === '' || password === '') {\n      toast.error('Please, fill in all fields');\n      return;\n    }\n\n    if (form.checkValidity() === false) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    const passwordRegex =\n      /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,15}$/;\n\n    if (!passwordRegex.test(password)) {\n      toast.error(\n        'Your password must contain at least one letter, one number, and one special character, and must not contain spaces'\n      );\n      return;\n    }\n    setValidated(true);\n\n    dispatch(register({ name, email, password }));\n  };\n  return (\n    <Form\n      className={css.form}\n      noValidate\n      onSubmit={handleSubmit}\n      validated={validated}\n    >\n      <h1 className={css.registerTitle}>Registration</h1>\n      <Form.Group className=\"mb-3\" controlId=\"formGroupName\">\n        <InputGroup>\n          <InputGroup.Text>\n            <FaUser size=\"20\" />\n          </InputGroup.Text>\n          <FloatingLabel controlId=\"floatingName\" label=\"Name\">\n            <Form.Control\n              required\n              type=\"text\"\n              placeholder=\"Enter your name\"\n              onChange={handleChange}\n              name=\"name\"\n            />\n          </FloatingLabel>\n        </InputGroup>\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"formGroupEmail\">\n        <InputGroup>\n          <InputGroup.Text>\n            <MdEmail size=\"20\" />\n          </InputGroup.Text>\n          <FloatingLabel controlId=\"floatingInput\" label=\"Email address\">\n            <Form.Control\n              required\n              type=\"email\"\n              placeholder=\"Enter email\"\n              onChange={handleChange}\n              name=\"email\"\n            />\n          </FloatingLabel>\n        </InputGroup>\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"formGroupPassword\">\n        <div>\n          <InputGroup className={css.password}>\n            <InputGroup.Text>\n              <RiLockPasswordFill size=\"20\" />\n            </InputGroup.Text>\n            <FloatingLabel controlId=\"floatingPassword\" label=\"Password\">\n              <Form.Control\n                className={css.formControlR}\n                required\n                type={show ? 'text' : 'password'}\n                placeholder=\"Enter password\"\n                onChange={handleChange}\n                name=\"password\"\n                minLength=\"8\"\n              />\n            </FloatingLabel>\n            <Button\n              className={css.buttonPasswordR}\n              variant=\"light\"\n              h=\"1.75rem\"\n              onClick={handleClick}\n            >\n              {show ? <GoEye size=\"20\" /> : <GoEyeClosed size=\"20\" />}\n            </Button>\n          </InputGroup>\n        </div>\n        <Form.Text className={css.passwordText} id=\"passwordHelpBlock\" muted>\n          Your password must be 8-15 characters, contain at least one letter,\n          one number, and one special character, and must not contain spaces.\n        </Form.Text>\n      </Form.Group>\n      <Button className={css.buttonSignUp} type=\"submit\">\n        Sign up\n      </Button>\n    </Form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"regWrapper\":\"registerPage_regWrapper__80F4r\"};","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport css from './registerPage.module.css';\nconst Register = () => {\n  return (\n    <main className={css.regWrapper}>\n      <RegisterForm />\n    </main>\n  );\n};\nexport default Register;\n"],"names":["RegisterForm","dispatch","useDispatch","useState","validated","setValidated","name","setName","email","setEmail","password","setPassword","show","setShow","handleChange","target","value","Form","className","css","noValidate","onSubmit","e","preventDefault","form","currentTarget","checkValidity","stopPropagation","test","register","toast","controlId","InputGroup","size","FloatingLabel","label","required","type","placeholder","onChange","minLength","Button","variant","h","onClick","id","muted"],"sourceRoot":""}