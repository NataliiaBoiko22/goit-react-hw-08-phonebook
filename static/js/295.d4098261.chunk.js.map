{"version":3,"file":"static/js/295.d4098261.chunk.js","mappings":"kRACA,EAA6B,8BAA7B,EAAkE,wBAAlE,EAAmJ,mCAAnJ,EAAkM,6BAAlM,EAA6O,+B,uCCWhOA,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAAwBN,EAAAA,EAAAA,WAAS,GAAjC,eAAOO,EAAP,KAAaC,EAAb,KAIMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOP,EAASQ,GAClB,IAAK,WACH,OAAON,EAAYM,GACrB,QACE,OAEL,EAmBD,OACE,UAACC,EAAA,EAAD,CACEC,UAAWC,EACXC,YAAU,EACVC,SArBiB,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACD,KAAVlB,GAA6B,KAAbE,IAIS,IAAzBe,EAAKE,kBACPJ,EAAEC,iBACFD,EAAEK,mBAGJrB,GAAa,GACbJ,GAAS0B,EAAAA,EAAAA,IAAM,CAAErB,MAAAA,EAAOE,SAAAA,KACxBD,EAAS,IACTE,EAAY,KAXVmB,EAAAA,GAAAA,MAAY,6BAYf,EAMGxB,UAAWA,EAJb,WAME,eAAIa,UAAWC,EAAf,oBACA,SAACF,EAAA,QAAD,CAAYC,UAAU,OAAOY,UAAU,iBAAvC,UACE,UAACC,EAAA,EAAD,YACE,SAACA,EAAA,OAAD,WACE,SAAC,MAAD,CAASC,KAAK,UAEhB,SAACC,EAAA,EAAD,CAAeH,UAAU,gBAAgBI,MAAM,cAA/C,UACE,SAACjB,EAAA,UAAD,CACEkB,UAAQ,EACRC,KAAK,QACLC,YAAY,cACZC,SAAUzB,EACVE,KAAK,kBAKb,UAACE,EAAA,QAAD,CAAYC,UAAU,OAAOY,UAAU,oBAAvC,WACE,SAACb,EAAA,QAAD,WACE,UAACc,EAAA,EAAD,YACE,SAACA,EAAA,OAAD,WACE,SAAC,MAAD,CAAoBC,KAAK,UAE3B,SAACC,EAAA,EAAD,CAAeH,UAAU,mBAAmBI,MAAM,WAAlD,UACE,SAACjB,EAAA,UAAD,CACEkB,UAAQ,EACRC,KAAMzB,EAAO,OAAS,WACtB0B,YAAY,iBACZC,SAAUzB,EACVE,KAAK,WACLwB,UAAU,SAGd,SAACC,EAAA,EAAD,CACEtB,UAAWC,EACXsB,QAAQ,QACRC,EAAE,UACFC,QA1EQ,kBAAM/B,GAASD,EAAf,EAsEV,SAMGA,GAAO,SAAC,MAAD,CAAOqB,KAAK,QAAU,SAAC,MAAD,CAAaA,KAAK,eAItD,SAACf,EAAA,OAAD,CAAW2B,GAAG,oBAAoBC,OAAK,EAAC3B,UAAWC,EAAnD,yJAKF,SAACqB,EAAA,EAAD,CAAQtB,UAAWC,EAAiBiB,KAAK,SAAzC,sBAKL,EC5GD,EAA6B,8BCS7B,EARc,WACZ,OACE,iBAAMlB,UAAWC,EAAjB,UACE,SAAClB,EAAD,KAGL,C","sources":["webpack://react-homework-template/./src/components/LoginForm/loginForm.module.css?9d59","components/LoginForm/LoginForm.jsx","webpack://react-homework-template/./src/pages/Login/loginPage.module.css?cdab","pages/Login/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loginTitle\":\"loginForm_loginTitle__3TAIt\",\"form\":\"loginForm_form__Y03VC\",\"password\":\"loginForm_password__9QIfm\",\"buttonPasswordL\":\"loginForm_buttonPasswordL__t-5BV\",\"textLogin\":\"loginForm_textLogin__lXLAr\",\"buttonLogin\":\"loginForm_buttonLogin__Z3KOq\",\"buttonSignUp\":\"loginForm_buttonSignUp__S1ypl\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport { MdEmail } from 'react-icons/md';\nimport { RiLockPasswordFill } from 'react-icons/ri';\nimport { GoEyeClosed, GoEye } from 'react-icons/go';\nimport { toast } from 'react-toastify';\nimport css from './loginForm.module.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const [validated, setValidated] = useState(false);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [show, setShow] = useState(false);\n\n  const handleClick = () => setShow(!show);\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    if (email === '' || password === '') {\n      toast.error('Please, fill in all fields');\n      return;\n    }\n    if (form.checkValidity() === false) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    setValidated(true);\n    dispatch(logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n  return (\n    <Form\n      className={css.form}\n      noValidate\n      onSubmit={handleSubmit}\n      validated={validated}\n    >\n      <h1 className={css.loginTitle}>Login</h1>\n      <Form.Group className=\"mb-3\" controlId=\"formGroupEmail\">\n        <InputGroup>\n          <InputGroup.Text>\n            <MdEmail size=\"20\" />\n          </InputGroup.Text>\n          <FloatingLabel controlId=\"floatingInput\" label=\"Enter email\">\n            <Form.Control\n              required\n              type=\"email\"\n              placeholder=\"Enter email\"\n              onChange={handleChange}\n              name=\"email\"\n            />\n          </FloatingLabel>\n        </InputGroup>\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"formGroupPassword\">\n        <Form.Group>\n          <InputGroup>\n            <InputGroup.Text>\n              <RiLockPasswordFill size=\"20\" />\n            </InputGroup.Text>\n            <FloatingLabel controlId=\"floatingPassword\" label=\"Password\">\n              <Form.Control\n                required\n                type={show ? 'text' : 'password'}\n                placeholder=\"Enter password\"\n                onChange={handleChange}\n                name=\"password\"\n                minLength=\"7\"\n              />\n            </FloatingLabel>\n            <Button\n              className={css.buttonPasswordL}\n              variant=\"light\"\n              h=\"1.75rem\"\n              onClick={handleClick}\n            >\n              {show ? <GoEye size=\"20\" /> : <GoEyeClosed size=\"20\" />}\n            </Button>\n          </InputGroup>\n        </Form.Group>\n        <Form.Text id=\"passwordHelpBlock\" muted className={css.textLogin}>\n          Your password must be 8-15 characters, contain at least one letter,\n          one number, and one special character, and must not contain spaces.\n        </Form.Text>\n      </Form.Group>\n      <Button className={css.buttonLogin} type=\"submit\">\n        Log in\n      </Button>\n    </Form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"logWrapper\":\"loginPage_logWrapper__zfNI1\"};","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport css from './loginPage.module.css';\nconst Login = () => {\n  return (\n    <main className={css.logWrapper}>\n      <LoginForm />\n    </main>\n  );\n};\n\nexport default Login;\n"],"names":["LoginForm","dispatch","useDispatch","useState","validated","setValidated","email","setEmail","password","setPassword","show","setShow","handleChange","target","name","value","Form","className","css","noValidate","onSubmit","e","preventDefault","form","currentTarget","checkValidity","stopPropagation","logIn","toast","controlId","InputGroup","size","FloatingLabel","label","required","type","placeholder","onChange","minLength","Button","variant","h","onClick","id","muted"],"sourceRoot":""}